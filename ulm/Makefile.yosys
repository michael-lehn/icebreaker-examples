vProject :=  test
svSource := $(wildcard *.sv)
vSource := test.v

#INCLUDE += -p 'read_verilog -sv ../fifo/fifo.sv'
#INCLUDE += -p 'read_verilog -sv ../fifo/dp_bram4096.sv'

vProject.log := $(vProject).log
vProject.json := $(vProject).json
vProject.asc := $(vProject).asc
vProject.bin := $(vProject).bin

pcf := ../icebreaker.pcf

synTool := yosys
#synTool.flags := \
#	-ql $(vProject.log) \
#	-p 'synth_ice40 -top $(vProject) -json $(vProject.json); write_verilog'
synTool.flags := \
    	-ql $(vProject.log) \
	$(INCLUDE) \
    	-p 'synth_ice40 -abc9 -dffe_min_ce_use 4 -device u -dsp -top $(vProject) -json $(vProject.json)'

pnr := nextpnr-ice40
pnr.flags := --up5k --package sg48 --json $(vProject.json) --pcf $(pcf) --asc

pack := icepack
prog := iceprog

all: $(vProject.bin)

$(vSource) : $(svSource)
	sv2v -v --define=SYNTHESIS --write=$@ $^

$(vProject.json) : $(vSource)
	$(synTool) $(synTool.flags) $(vSource)

$(vProject.asc) : $(vProject.json)
	$(pnr) $(pnr.flags) $(vProject.asc)

$(vProject.bin) : $(vProject.asc)
	$(pack) $(vProject.asc) $(vProject.bin)

prog:	$(vProject.bin)
	$(prog) $(vProject.bin)

clean:
	$(RM) $(vSource)
	$(RM) $(vProject.json) $(vProject.asc) $(vProject.bin) $(vProject.log)
